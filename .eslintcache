[{"C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\index.js":"1","C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\reportWebVitals.js":"2","C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\App.js":"3","C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\components\\Game.jsx":"4","C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\components\\Board.jsx":"5","C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\components\\animatedBackground\\Canvas.jsx":"6","C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\services\\Cells.js":"7","C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\components\\Cell.jsx":"8","C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\components\\Success.jsx":"9","C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\components\\BoardHooks.jsx":"10","C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\components\\useShuffle.jsx":"11"},{"size":517,"mtime":1611761239004,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1611761239005,"results":"14","hashOfConfig":"13"},{"size":168,"mtime":1614806580930,"results":"15","hashOfConfig":"13"},{"size":270,"mtime":1614939430747,"results":"16","hashOfConfig":"13"},{"size":2884,"mtime":1614882971722,"results":"17","hashOfConfig":"13"},{"size":2253,"mtime":1611971607358,"results":"18","hashOfConfig":"13"},{"size":1797,"mtime":1613998785732,"results":"19","hashOfConfig":"13"},{"size":587,"mtime":1614939666818,"results":"20","hashOfConfig":"13"},{"size":1147,"mtime":1614939683081,"results":"21","hashOfConfig":"13"},{"size":3166,"mtime":1615120949985,"results":"22","hashOfConfig":"13"},{"size":798,"mtime":1614879976975,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"k4xwdq",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},{"filePath":"52","messages":"53","errorCount":2,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\index.js",[],["54","55"],"C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\reportWebVitals.js",[],"C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\App.js",[],"C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\components\\Game.jsx",[],"C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\components\\Board.jsx",["56","57","58","59"],"import React, { Component } from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport Cell from \"./Cell\";\r\nimport {getCells} from \"../services/Cells.js\";\r\nimport _, { update } from 'lodash' \r\nimport \"../styles/App.css\";\r\n\r\n\r\nimport Success from './Success';\r\n\r\n\r\nclass Board extends Component {\r\n\r\nstate = {\r\nmatchedBlends: [],\r\nblendLength: 0,\r\n\r\ncells: [],\r\nactiveCells: [],\r\nactiveCellsId: []\r\n\r\n};\r\n\r\n\r\n\r\ncomponentDidMount() {\r\n\r\n   let ArrayMinusMid = getCells().filter(cell=> cell.id !== 13);\r\n   let shuffleNames = _.shuffle(ArrayMinusMid.map(cell=> cell.name));\r\n\r\n   let cellsCopy = getCells();\r\n   shuffleNames.splice(12, 0, `CONF CALL ${String.fromCodePoint(9917)}`)\r\n    for (let i = 0; i < 25; i++ ) { \r\n            if (cellsCopy[i].id === 13) continue;\r\n            cellsCopy[i].name = shuffleNames[i]\r\n        }  \r\n\r\nthis.setState({cells: cellsCopy})\r\n\r\n     \r\n    }\r\n\r\n    \r\n\r\n\r\n\r\nHandleClick = (cell) => {\r\n  \r\n\r\ncell.active = !cell.active\r\nthis.setState({ cell: cell});\r\n\r\nlet activeCells = this.state.cells.filter((cell)=> cell.active == true)\r\n\r\nthis.setState({ activeCells: activeCells})\r\n\r\nlet activeCellsId = activeCells.map(activeCells => activeCells.id)\r\n \r\nthis.setState({activeCellsId: activeCellsId});\r\n\r\nlet winningBlends = [[1, 2, 3 ,4, 5],\r\n[6, 7, 8, 9, 10],\r\n[11, 12,13, 14, 15],\r\n[16, 17, 18, 19, 20],\r\n[21, 22, 23, 24, 25],\r\n[1, 6, 11, 16,21],\r\n[2, 7, 12, 17, 22],\r\n[3, 8, 13, 18, 23],\r\n[4, 9, 14, 19, 24],\r\n[5, 10, 15, 20, 25],\r\n[1, 7, 13, 19, 25],\r\n[5, 9, 13, 17, 21]];\r\n\r\n\r\nlet matched = (activeCellsId, winningBlends) =>\r\nwinningBlends.filter((winningBlend) =>\r\nwinningBlend.every(l =>\r\n activeCellsId.includes(l)));\r\n\r\nlet matchedBlends = matched(activeCellsId, winningBlends);\r\nlet status = 0;\r\nmatchedBlends ? status = 1 : status = 0;\r\nthis.setState({status: status})\r\n\r\nconsole.log(matchedBlends)\r\nthis.setState({matchedBlends: matchedBlends })\r\n\r\n\r\n}\r\n\r\n\r\nrender() {\r\nconst {cells } = this.state;\r\nconst {matchedBlends} = this.state;\r\nconst {length: count} = matchedBlends;\r\n\r\n\r\nreturn (\r\n    <section className=\"board\">\r\n   \r\n<section className=\"bingoGame\">\r\n<span style={{color: 'white', fontSize: 50, fontFamily: 'Trebuchet MS'}}> \r\nSpace Game {count >= 1 ? <span> {String.fromCodePoint( 127766)} </span> : <span> {String.fromCodePoint(127769)} </span> } \r\n </span>\r\n\r\n\r\n<section className=\"bingoResult\"> \r\n{console.log(\"result is rendeirng\")}\r\n {/* result on success */}\r\n {matchedBlends.length >= 1 ? <Success count={count}/> : <section className=\"noBlends\">\r\n     <div style={{fontSize: 50, fontFamily: 'Trebuchet MS'}}> Space Call: 0 {String.fromCodePoint(127766)}</div>\r\n       </section>}\r\n</section>\r\n\r\n<section className=\"bingoGrid\">\r\n{console.log(\"grid is rendeirng\")}\r\n{cells.map(cell => (\r\n<Cell cell={cell} HandleClick={this.HandleClick}/>\r\n))}\r\n</section>\r\n\r\n</section> </section>  );\r\n}\r\n}\r\nexport default Board;\r\n\r\n",["60","61"],"C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\components\\animatedBackground\\Canvas.jsx",["62","63"],"import React, { Component } from \"react\";\r\nimport Particles from \"react-particles-js\";\r\nimport \"../../styles/App.css\"\r\n\r\nclass Canvas extends Component {\r\n  state = { width: \"0px\", height: \"0px\" };\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n  updateWindowDimensions = () => {\r\n    this.setState({\r\n      width: `${window.innerWidth - 10}px`,\r\n      height: `${window.innerHeight - 5}px`\r\n    });\r\n  };\r\n  render() {\r\n    const { width, height } = this.state;\r\n\r\n    return (\r\n        <section className='canvas' >\r\n      <Particles id=\"particle-canvas\"\r\n        {...this.state}\r\n        params={{\r\n          particles: {\r\n            number: {\r\n              value: 38,\r\n              \r\n            },\r\n            color: {\r\n             'value': ['#ff223e', '#5d1eb2', '#ff7300']\r\n            },\r\n            shape: {\r\n              type: \"circle\",\r\n             \r\n            },\r\n            opacity: {\r\n              value: 1,\r\n              random: false,\r\n              anim: {\r\n                enable: true,\r\n                speed: 1,\r\n                opacity_min: 0.1,\r\n                sync: false\r\n              }\r\n            },\r\n            size: {\r\n              value: 3,\r\n              random: true,\r\n              anim: {\r\n                enable:false,\r\n                \r\n              }\r\n            },\r\n            line_linked: {\r\n              enable: false,\r\n            },\r\n            move: {\r\n              enable: true,\r\n              speed: 2,\r\n              direction: \"none\",\r\n              random: true,\r\n              straight: false,\r\n              out_mode: \"out\",\r\n              \r\n              \r\n            }\r\n          },\r\n          interactivity: {\r\n            detect_on: \"canvas\",\r\n            events: {\r\n              onhover: {\r\n                enable: false\r\n              },\r\n              onclick: {\r\n                enable: false\r\n              },\r\n              resize: true\r\n            }\r\n          },\r\n          retina_detect: true\r\n        }}\r\n      />\r\n   </section> );\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\services\\Cells.js",[],"C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\components\\Cell.jsx",["64","65"],"import React, { useMemo, useEffect } from 'react';\r\n\r\nconst Cell = props => {\r\n    \r\n    const {cell, HandleClick} = props;\r\n\r\n    useEffect(()=> {\r\n      console.log(\"cell component re-rendered / useEffect\")\r\n    }, [props.cell])\r\n    \r\n\r\n    return (\r\n  <React.Fragment> \r\n   \r\n <button \r\n    \r\n    className={cell.active ? \"highlighted\": \"nonHighlighted\"}\r\n    disabled={cell.id ==13}\r\n    onClick={()=> HandleClick(cell)}> \r\n    <div> {cell.id} </div>\r\n    {cell.name}\r\n    </button>\r\n\r\n\r\n\r\n      </React.Fragment>\r\n\r\n       \r\n\r\n      );\r\n}\r\n \r\nexport default React.memo(Cell);\r\n\r\n\r\n",["66","67"],"C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\components\\Success.jsx",["68","69"],"import React, {useEffect} from 'react';\r\n\r\n\r\nconst Success = (props) => {\r\n\r\n\r\n\tuseEffect(()=> {\r\n\t\tconsole.log(props, \"success is running\")\r\n\t}, [props.success] )\r\n\tconst {count} = props;\r\n\treturn ( <section className=\"matchedBlends\">\r\n\t<div className=\"action\">\r\n\r\n\t<div className=\"trophy\">\r\n\t\t<svg fill=\"#FFD600\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\">\r\n\t\t  <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M11,16.5L18,9.5L16.59,8.09L11,13.67L7.91,10.59L6.5,12L11,16.5Z\"></path>\r\n\t</svg>\r\n\t</div>\r\n\t<div  className=\"confetti\"></div>\r\n\t<div  className=\"confetti two\"></div>\r\n\t<div  className=\"confetti three\"></div>\r\n\t<div  className=\"confetti four\"></div>\r\n\t<div  className=\"confetti--purple\"></div>\r\n\t<div  className=\"confetti--purple two\"></div>\r\n\t<div  className=\"confetti--purple three\"></div>\r\n\t<div  className=\"confetti--purple four\"></div>\r\n\t\r\n\r\n</div>\r\n<div className=\"animatedText anim-typewriter\"> <h2> Hey, Astronaut,  \r\n{/*  <br/> Orbiting {count}  times !!!*/} \r\n <br/>\r\n{String.fromCodePoint(127769)}  </h2></div>\r\n</section>  );\r\n}\r\n \r\nexport default Success;\r\n","C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\components\\BoardHooks.jsx",["70","71","72","73","74"],"import React, {useState, useEffect, useMemo, useCallback} from 'react';\r\nimport \"../styles/App.css\";\r\nimport {getCells} from \"../services/Cells.js\";\r\nimport _ from 'lodash';\r\nimport Cell from \"./Cell\";\r\n\r\n\r\n\r\nfunction BoardHooks () {\r\n\r\n    const [cells, setCells ] = useState([])\r\n    const [activeCells, setActiveCells] = useState([])\r\n    const [activeCellsId, setActiveCellsId] = useState([])\r\n    const [matchedBlends, setMatchedBlends] = useState([])\r\n    const [success, setSuccess ]  = useState(0)\r\n \r\n\r\n    \r\n   \r\n   // shuffle \r\n    const runShuffle = useCallback(()  => {\r\n        let ArrayMinusMid = getCells().filter(cell=> cell.id !== 13);\r\n        let shuffleNames = _.shuffle(ArrayMinusMid.map(cell=> cell.name));\r\n     \r\n        let cellsToShuffle = getCells();\r\n        \r\n        shuffleNames.splice(12, 0, `CONF CALL ${String.fromCodePoint(9917)}`)\r\n         for (let i = 0; i < 25; i++ ) { \r\n        if (cellsToShuffle[i].id === 13) continue;\r\n        cellsToShuffle[i].name = shuffleNames[i] \r\n    } \r\n        setCells(cellsToShuffle)\r\n    }, [])\r\n\r\n\r\n    // shuffle array on initial reload.\r\n    useEffect(() => {\r\n        runShuffle()\r\n\r\n    }, [runShuffle])\r\n\r\n\r\n    // outside\r\n\r\n    const runMatch = useCallback((cell) => {\r\n       \r\n       \r\n      //  console.log(cell, \"selected Cell\")\r\n        cell.active = !cell.active;\r\n        setActiveCells(cells.filter((cell)=> cell.active == true));\r\n      //  console.log(activeCells, \"all active/selected cells\")\r\n        setActiveCellsId(activeCells.map(activeCells => activeCells.id));\r\n      //  console.log(activeCellsId, \"all active/selected cells IDS\")\r\n     \r\n\r\n        let winningBlends = [\r\n            [1, 2, 3 ,4, 5],\r\n            [6, 7, 8, 9, 10],\r\n            [11, 12,13, 14, 15],\r\n            [16, 17, 18, 19, 20],\r\n            [21, 22, 23, 24, 25],\r\n            [1, 6, 11, 16,21],\r\n            [2, 7, 12, 17, 22],\r\n            [3, 8, 13, 18, 23],\r\n            [4, 9, 14, 19, 24],\r\n            [5, 10, 15, 20, 25],\r\n            [1, 7, 13, 19, 25],\r\n            [5, 9, 13, 17, 21]];\r\n            \r\n            \r\n            let matchFormula = (activeCellsId, winningBlends) =>\r\n            winningBlends.filter((winningBlend) =>\r\n            winningBlend.every(l =>\r\n             activeCellsId.includes(l)));\r\n            \r\n            let result = matchFormula(activeCellsId, winningBlends);\r\n            console.log(\"result\", result)\r\n            setMatchedBlends(result)\r\n           \r\n        \r\n\r\n    })\r\n    // handle cell click\r\n\r\n    useEffect(()=> {\r\n\r\n      //  console.log(activeCellsId, \"checking effect stand-alone / activeCellsId\")\r\n      console.log(matchedBlends, \"match\")\r\n    })\r\n\r\n   \r\n    return (\r\n        <section className=\"board\">\r\n        <section className=\"bingoGame\">  </section>\r\n        <section className=\"bingoResult\"> Result {console.log(\"result is rendering\")}</section>\r\n        <section className=\"bingoGrid\">\r\n        {console.log(\"grid is rendeirng\")}\r\n        {cells.map(cell => (\r\n     \r\n        <Cell cell={cell} \r\n        HandleClick={runMatch}/>\r\n        ))}\r\n        </section>\r\n\r\n    </section>\r\n    )\r\n}\r\n\r\nexport default BoardHooks;\r\n\r\n","C:\\Users\\Manq\\Desktop\\bingo_react_challenge\\react_bingo_coding_challenge\\src\\components\\useShuffle.jsx",["75","76","77","78","79","80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":9,"nodeType":"88","messageId":"89","endLine":2,"endColumn":17},{"ruleId":"86","severity":1,"message":"90","line":2,"column":19,"nodeType":"88","messageId":"89","endLine":2,"endColumn":28},{"ruleId":"86","severity":1,"message":"91","line":5,"column":13,"nodeType":"88","messageId":"89","endLine":5,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":53,"column":64,"nodeType":"94","messageId":"95","endLine":53,"endColumn":66},{"ruleId":"82","replacedBy":"96"},{"ruleId":"84","replacedBy":"97"},{"ruleId":"86","severity":1,"message":"98","line":22,"column":13,"nodeType":"88","messageId":"89","endLine":22,"endColumn":18},{"ruleId":"86","severity":1,"message":"99","line":22,"column":20,"nodeType":"88","messageId":"89","endLine":22,"endColumn":26},{"ruleId":"86","severity":1,"message":"100","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":24},{"ruleId":"92","severity":1,"message":"93","line":18,"column":23,"nodeType":"94","messageId":"95","endLine":18,"endColumn":25},{"ruleId":"82","replacedBy":"101"},{"ruleId":"84","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":9,"column":5,"nodeType":"105","endLine":9,"endColumn":20,"suggestions":"106"},{"ruleId":"86","severity":1,"message":"107","line":10,"column":9,"nodeType":"88","messageId":"89","endLine":10,"endColumn":14},{"ruleId":"86","severity":1,"message":"100","line":1,"column":37,"nodeType":"88","messageId":"89","endLine":1,"endColumn":44},{"ruleId":"86","severity":1,"message":"108","line":15,"column":12,"nodeType":"88","messageId":"89","endLine":15,"endColumn":19},{"ruleId":"86","severity":1,"message":"109","line":15,"column":21,"nodeType":"88","messageId":"89","endLine":15,"endColumn":31},{"ruleId":"103","severity":1,"message":"110","line":45,"column":22,"nodeType":"88","endLine":45,"endColumn":33},{"ruleId":"92","severity":1,"message":"93","line":50,"column":58,"nodeType":"94","messageId":"95","endLine":50,"endColumn":60},{"ruleId":"86","severity":1,"message":"111","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"90","line":1,"column":26,"nodeType":"88","messageId":"89","endLine":1,"endColumn":35},{"ruleId":"86","severity":1,"message":"100","line":1,"column":37,"nodeType":"88","messageId":"89","endLine":1,"endColumn":44},{"ruleId":"86","severity":1,"message":"112","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":12},{"ruleId":"86","severity":1,"message":"113","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":13},{"ruleId":"114","severity":2,"message":"115","line":6,"column":28,"nodeType":"88","endLine":6,"endColumn":36},{"ruleId":"114","severity":2,"message":"116","line":9,"column":12,"nodeType":"88","endLine":9,"endColumn":23},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'update' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["117"],["118"],"'width' is assigned a value but never used.","'height' is assigned a value but never used.","'useMemo' is defined but never used.",["117"],["118"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["119"],"'count' is assigned a value but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'React' is defined but never used.","'Cell' is defined but never used.","'cells' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","React Hook \"useCallback\" is called in function \"runShuffle\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [props, props.success]",{"range":"122","text":"123"},[146,161],"[props, props.success]"]